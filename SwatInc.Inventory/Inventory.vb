Imports System.Data.Entity
Imports DevExpress.Data.Filtering
Imports DevExpress.XtraGrid.Views.Grid

Public Class Inventory
    Dim dbContext As Nova.NovaContext = New Nova.NovaContext()

    Sub New()

        InitializeComponent()

        ' This line of code is generated by Data Source Configuration Wizard
        ' Instantiate a new DBContext
        ' Call the Load method to get the data for the given DbSet from the database.
        '

        ItemDataLoadRequired()

        'Group Columns
        If GridView1.GroupedColumns.Count = 0 Then
            GridView1.Columns("Lab").GroupIndex = 1
            GridView1.Columns("ItemName").GroupIndex = 2
        End If
        GridView1.Columns("Expiry").SortOrder = DevExpress.Data.ColumnSortOrder.Ascending

        AddHandler NovaUI.ActiveLaboratoryChanged, AddressOf LabChanged
        AddHandler GridView1.RowClick, AddressOf RowClicked

        NovaUI.RaiseEventActiveLaboratoryChanged()
    End Sub

    Public Event InventoryItemEdited(ByVal sender As Object, e As EventArgs)

    Public Event InventoryItemEditing(ByVal sender As Object, e As EventArgs)

    Private Sub ItemDataLoadRequired()
        Dim ItemsDataQuery = From i In dbContext.Items
                             From l In dbContext.Lots Where l.Item.Id = i.Id
                             From LabItems In dbContext.Laboratory_Items
                             From u In dbContext.Units Where i.Unit.Id = u.Id
                             From labs In dbContext.Laboratory Where (LabItems.Item.Id = i.Id And LabItems.Laboratory.Id = labs.Id)
                             Select New With {Key .ItemId = i.Id,
                                        Key .ItemName = i.Name,
                                        Key .Vendor = i.Vendor.Name,
                                        Key .Amount = l.Quantity & " " & u.Unit,
                                        i.CatalogNumber,
                                        Key .ItemType = i.Type.Type,
                                        Key .LotNumber = l.Id,
                                        Key .PackSize = i.PackSize.Size,
                                        Key .Expiry = l.ExpirationDate,
                                        Key .Lab = labs.Name}

        ItemsDataQuery.Load()
        GridControl1.DataSource = ItemsDataQuery.ToList
    End Sub

    Private Sub LabChanged(ByVal sender As Object, ByVal e As ActiveLaboratoryEventArgs)
        If Not e.LaboratoryName = "All Labs" Then
            GridView1.ActiveFilterCriteria = New BinaryOperator("Lab", e.LaboratoryName)
        Else
            GridView1.ActiveFilterCriteria = Nothing
        End If
    End Sub

    Private Sub RowClicked(ByVal sender As Object, e As RowClickEventArgs)

        If Not e.RowHandle < 0 Then
            Dim UserResponse = MsgBox("Do you want to edit the item?", vbYesNo, "Edit Inventory")
            If UserResponse = MsgBoxResult.Yes Then
                RaiseEvent InventoryItemEditing(Me, New InventoryItemEditEventArgs With {.ItemId = GridView1.GetFocusedRowCellValue("ItemId"),
                                                .LotNumber = GridView1.GetFocusedRowCellValue("LotNumber")})
            End If

        End If

    End Sub

End Class